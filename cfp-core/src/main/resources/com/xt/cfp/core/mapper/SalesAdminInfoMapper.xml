<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SL_ADMIN_INFO" >
  <resultMap id="BaseResultMap" type="com.xt.cfp.core.pojo.SalesAdminInfo" >
    <id column="ADMIN_ID" property="adminId" jdbcType="DECIMAL" />
    <result column="DISPLAY_NAME" property="displayName" jdbcType="VARCHAR" />
    <result column="ADMIN_CODE" property="adminCode" jdbcType="VARCHAR" />
    <result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR" />
    <result column="LOGIN_PWD" property="loginPwd" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ADMIN_STATE" property="adminState" jdbcType="DECIMAL" />
    <result column="TELEPHONE" property="telephone" jdbcType="VARCHAR" />
    <result column="EMAIL" property="email" jdbcType="VARCHAR" />
    <result column="ADMIN_ID_CODE" property="adminIdCode" jdbcType="VARCHAR" />
    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ADMIN_ID, DISPLAY_NAME, ADMIN_CODE, LOGIN_NAME, LOGIN_PWD, CREATE_TIME, ADMIN_STATE, 
    TELEPHONE, EMAIL, ADMIN_ID_CODE, UPDATE_TIME
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from SL_ADMIN_INFO
    where ADMIN_ID = #{adminId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from SL_ADMIN_INFO
    where ADMIN_ID = #{adminId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="com.xt.cfp.core.pojo.SalesAdminInfo" >
    <selectKey keyProperty="adminId" order="BEFORE" resultType="long">
      SELECT SEQ_SL_ADMIN_INFO.NEXTVAL as adminId FROM dual
    </selectKey>
    insert into SL_ADMIN_INFO (ADMIN_ID, DISPLAY_NAME, ADMIN_CODE, 
      LOGIN_NAME, LOGIN_PWD, CREATE_TIME, 
      ADMIN_STATE, TELEPHONE, EMAIL, 
      ADMIN_ID_CODE, UPDATE_TIME)
    values (#{adminId,jdbcType=DECIMAL}, #{displayName,jdbcType=VARCHAR}, #{adminCode,jdbcType=VARCHAR}, 
      #{loginName,jdbcType=VARCHAR}, #{loginPwd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{adminState,jdbcType=DECIMAL}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{adminIdCode,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xt.cfp.core.pojo.SalesAdminInfo" >
    <selectKey keyProperty="adminId" order="BEFORE" resultType="long">
      SELECT SEQ_SL_ADMIN_INFO.NEXTVAL as adminId FROM dual
    </selectKey>
    insert into SL_ADMIN_INFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        ADMIN_ID,
      </if>
      <if test="displayName != null" >
        DISPLAY_NAME,
      </if>
      <if test="adminCode != null" >
        ADMIN_CODE,
      </if>
      <if test="loginName != null" >
        LOGIN_NAME,
      </if>
      <if test="loginPwd != null" >
        LOGIN_PWD,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="adminState != null" >
        ADMIN_STATE,
      </if>
      <if test="telephone != null" >
        TELEPHONE,
      </if>
      <if test="email != null" >
        EMAIL,
      </if>
      <if test="adminIdCode != null" >
        ADMIN_ID_CODE,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        #{adminId,jdbcType=DECIMAL},
      </if>
      <if test="displayName != null" >
        #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="adminCode != null" >
        #{adminCode,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adminState != null" >
        #{adminState,jdbcType=DECIMAL},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="adminIdCode != null" >
        #{adminIdCode,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xt.cfp.core.pojo.SalesAdminInfo" >
    update SL_ADMIN_INFO
    <set >
      <if test="displayName != null" >
        DISPLAY_NAME = #{displayName,jdbcType=VARCHAR},
      </if>
      <if test="adminCode != null" >
        ADMIN_CODE = #{adminCode,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null" >
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPwd != null" >
        LOGIN_PWD = #{loginPwd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="adminState != null" >
        ADMIN_STATE = #{adminState,jdbcType=DECIMAL},
      </if>
      <if test="telephone != null" >
        TELEPHONE = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        EMAIL = #{email,jdbcType=VARCHAR},
      </if>
      <if test="adminIdCode != null" >
        ADMIN_ID_CODE = #{adminIdCode,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ADMIN_ID = #{adminId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xt.cfp.core.pojo.SalesAdminInfo" >
    update SL_ADMIN_INFO
    set DISPLAY_NAME = #{displayName,jdbcType=VARCHAR},
      ADMIN_CODE = #{adminCode,jdbcType=VARCHAR},
      LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      LOGIN_PWD = #{loginPwd,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      ADMIN_STATE = #{adminState,jdbcType=DECIMAL},
      TELEPHONE = #{telephone,jdbcType=VARCHAR},
      EMAIL = #{email,jdbcType=VARCHAR},
      ADMIN_ID_CODE = #{adminIdCode,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where ADMIN_ID = #{adminId,jdbcType=DECIMAL}
  </update>

  <!-- 分页查询-列表 -->
  <select id="findAllSalesAdminInfoByPage" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select ai.*,ari.ROLE_NAME
    from SL_ADMIN_INFO ai left join(
    select ar.admin_id,
    LISTAGG(ri.ROLE_NAME, ',') WITHIN GROUP(ORDER BY ri.ROLE_NAME) AS ROLE_NAME
    from SL_ADMIN_ROLE ar,SL_ROLE_INFO ri
    where ri.ROLE_ID	= ar.ROLE_ID
    group by ar.ADMIN_ID
    ) ari
    on ai.ADMIN_ID = ari.ADMIN_ID
    order by ai.ADMIN_ID desc
  </select>

  <!-- 分页查询-数量 -->
  <select id="count_findAllSalesAdminInfoByPage" resultType="int" parameterType="java.util.HashMap">
    SELECT count(1) from SL_ADMIN_INFO ORDER BY ADMIN_ID DESC
  </select>

  <!-- 根据登录名获取员工信息 -->
  <select id="findAdminByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    from SL_ADMIN_INFO where LOGIN_NAME = #{loginName,jdbcType=VARCHAR}
  </select>

  <select id="getLeaderByOrganizeId" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    sa.*
    from SL_ADMIN_INFO sa left join SL_ADMIN_ORGANIZATION so
    on SA.ADMIN_ID = SO.ADMIN_ID
    where SO.ORGANIZE_ID =  #{organizeId,jdbcType=DECIMAL}
  </select>

  <!-- 根据工号获取员工信息 -->
  <select id="getAdminByAdminCode" resultMap="BaseResultMap" parameterType="java.lang.String">
    SELECT
    <include refid="Base_Column_List" />
    from SL_ADMIN_INFO where LOGIN_NAME = #{adminCode,jdbcType=VARCHAR}
  </select>
  <select id="getSalesAdminByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    ai.*
    from SL_ADMIN_INFO ai left join SL_ADMIN_USER_INFO ui on AI.ADMIN_ID = UI.ADMIN_ID

    where UI.USER_ID = #{userId,jdbcType=DECIMAL} and UI.STATUS = '0'
  </select>

  <select id="getAllSalesAdmin" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from SL_ADMIN_INFO ai where ADMIN_STATE = '1'
  </select>
	
	<select id="getAllSubordinateCodeAdminById" resultType="String" parameterType="java.lang.Integer">
		select a.admin_code from SL_ADMIN_INFO a where a.admin_id in
		(
		  select s.admin_id from SL_ADMIN_ORGANIZATION s where s.organize_id in 
		  (
		    select t.organize_id from SL_ORGANIZATION_INFO t where t.organize_code like
		    (
		      select soi.organize_code from SL_ADMIN_INFO sai
		      left join SL_ADMIN_ORGANIZATION sao on sao.admin_id=sai.admin_id
		      left join SL_ORGANIZATION_INFO soi on soi.organize_id=sao.organize_id
		      where sai.admin_id = #{adminId,jdbcType=DECIMAL}
		    ) ||'%'
		  )      
		)
	</select>
	<select id="getAllSubordinateNum" resultType="int" parameterType="java.lang.Integer">
		select count(1) from SL_ORGANIZATION_INFO t
		where t.parent_id=
		(
		  select a.organize_id from
		  (
		         select soi.organize_id from SL_ADMIN_INFO sai
		         left join SL_ADMIN_ORGANIZATION sao on sao.admin_id=sai.admin_id
		         left join SL_ORGANIZATION_INFO soi on soi.organize_id=sao.organize_id
		         where sai.admin_id = #{adminId,jdbcType=DECIMAL}
		  ) a
		)
	</select>
</mapper>